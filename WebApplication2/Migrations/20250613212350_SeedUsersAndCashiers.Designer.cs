// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication2.Persistence;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(CashierContext))]
    [Migration("20250613212350_SeedUsersAndCashiers")]
    partial class SeedUsersAndCashiers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication2.Entities.Admins", b =>
                {
                    b.Property<Guid>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("AdminPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("AdminPhonenumber")
                        .HasMaxLength(50)
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("integer");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("WebApplication2.Entities.Cashier", b =>
                {
                    b.Property<Guid>("CashierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("CashierID");

                    b.Property<string>("CashierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("CashierName");

                    b.Property<int>("CashierPhoneNumber")
                        .HasColumnType("integer")
                        .HasColumnName("CashierPhoneNumber");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("CashierID");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Cashiers");

                    b.HasData(
                        new
                        {
                            CashierID = new Guid("33d21ae6-0a1a-4e81-a2b2-42c57fcd4e59"),
                            CashierName = "Иван Иванов",
                            CashierPhoneNumber = 900123456,
                            UserId = new Guid("19170bf0-83c0-4e86-b566-1c50b92a5da0")
                        });
                });

            modelBuilder.Entity("WebApplication2.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int?>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("217213b5-9e20-43cb-a3ed-97085ed501e8"),
                            Email = "admin@mail.com",
                            Password = "hashed_password_admin",
                            Role = 0,
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("19170bf0-83c0-4e86-b566-1c50b92a5da0"),
                            Email = "cashier@mail.com",
                            Password = "hashed_password_cashier",
                            Role = 1,
                            Username = "cashier1"
                        });
                });

            modelBuilder.Entity("WebApplication2.Entities.Cashier", b =>
                {
                    b.HasOne("WebApplication2.Entities.User", "User")
                        .WithOne("Cashier")
                        .HasForeignKey("WebApplication2.Entities.Cashier", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication2.Entities.User", b =>
                {
                    b.Navigation("Cashier");
                });
#pragma warning restore 612, 618
        }
    }
}
